# Exchange Service 구현 계획 (v3)

## 1. 현재 상태
### Layer 1 - Core [완료]
- [✓] 기본 모델 정의
- [✓] 프로토콜 정의
- [✓] 공통 유틸리티

### Layer 2 - WebSocket [완료]
- [✓] 웹소켓 연결 관리
- [✓] 메시지 송수신
- [✓] 재연결 처리

### Layer 3 - Data Converter [완료]
- [✓] 표준화된 데이터 모델
- [✓] 데이터 변환 인터페이스
- [✓] 거래소별 변환 로직
- [✓] 통합 변환 서비스

### Layer 4 - Distribution [진행 중]
- [✓] 기본 배포 서비스 구현
  - [✓] DistributionService 인터페이스 정의
  - [✓] DirectDistributionService 구현
  - [✓] 메시지 전달 테스트
  - [✓] 프론트엔드 웹소켓 핸들러 리팩토링

- [✓] Kafka 기반 배포 구현
  - [✓] KafkaDistributionService 구현
  - [✓] Producer/Consumer 설정
  - [✓] 장애 복구 로직
  - [✓] 프론트엔드 영향도 없음 확인

- [✓] Leader-Follower 구현
  - [✓] Zookeeper 연동
  - [✓] 리더/팔로워 전환
  - [✓] 역할별 동작 구현

## 2. 다음 구현 단계
### 성능 최적화
- [ ] KafkaDistributionService 개선
  - [ ] 불필요한 헬스체크 호출 제거
  - [ ] 메시지 전송 시 매번 체크하는 로직 개선
  - [ ] 상태 변경 시에만 체크하도록 수정

- [ ] 로깅 최적화
  - [ ] 과도한 INFO 레벨 로그 DEBUG로 변경
  - [ ] 중복 로그 제거
  - [ ] 필수 로그만 남도록 정리

## 3. 현재 구현된 주요 기능
1. 인프라 상태 관리
- 자동 상태 감지 및 전환
- 헬스체크 시스템
- 장애 복구 메커니즘

2. 분산 처리
- 리더/팔로워 구조
- Kafka 기반 메시지 전달
- 장애 시 자동 전환 