spring:
  profiles:
    active: local
  kafka:
    enabled: true
    bootstrap-servers: localhost:9092
    consumer:
      group-id: exchange-group
    topics:
      trades: exchange.trades

zookeeper:
  connect-string: localhost:2181

# Health Check & Monitoring 설정
infrastructure:
  health-check:
    enabled: true
    logging:
      enabled: true
      interval: 10000  # 10초
  monitoring:
    data-flow:
      enabled: true
      logging:
        enabled: true
        level: INFO
        interval: 10000  # 10초로 통일

server:
  port: 8080

# 공통 설정
exchange:
  connection:
    max-retry-attempts: 3
    reconnect-delay: 1000      # 1초
    connection-timeout: 30000   # 30초
  websocket:
    binance: wss://stream.binance.com:9443/ws
    upbit: wss://api.upbit.com/websocket/v1
    bithumb: wss://pubwss.bithumb.com/pub/ws
  common:
    supported-symbols:
      - BTC
      - ETH
      - XRP
      - DOGE
  exchanges:
    binance:
      supported-currencies:
        - USDT
        - BTC
    upbit:
      supported-currencies:
        - KRW
        - BTC
        - USDT
    bithumb: 
      supported-currencies:
        - KRW    

logging:
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(%5p) %clr([%logger{0}]){cyan} %clr(:){faint} %m%n"
  level:
    root: INFO
    # 데이터 흐름 관련 로깅 설정 (INFO로 변경)
    com.example.boot.exchange.layer4_distribution.kafka.service.KafkaDistributionService: INFO
    com.example.boot.exchange.layer4_distribution.direct.service.DirectDistributionService: INFO
    # 모니터링 관련 로깅 설정 (INFO로 변경)
    com.example.boot.exchange.layer4_distribution.common.monitoring: INFO
    com.example.boot.exchange.layer4_distribution.common.health: INFO
    # 기타 로깅 설정
    com.example.boot.exchange.layer4_distribution.kafka: INFO
    com.example.boot.exchange.layer4_distribution.direct: INFO
    org.apache.kafka: WARN        # WARN으로 변경
    org.apache.zookeeper: WARN    # WARN으로 변경
    org.apache.curator: WARN      # WARN으로 변경
    org.springframework: WARN

---
# 로컬 개발 환경
spring:
  config:
    activate:
      on-profile: local
  kafka:
    enabled: true
    bootstrap-servers: localhost:9092  # localhost로 수정

zookeeper:
  connect-string: localhost:2181

---
# Docker Compose 환경
spring:
  config:
    activate:
      on-profile: docker
  kafka:
    enabled: true
    bootstrap-servers: kafka:9092

zookeeper:
  connect-string: zookeeper:2181

---
# EKS 운영 환경
spring:
  config:
    activate:
      on-profile: prod
  kafka:
    enabled: true
    bootstrap-servers: ${KAFKA_SERVERS}

zookeeper:
  connect-string: ${ZOOKEEPER_SERVERS}



